component:
  name: cloudfront_distribution
  dependsOn:
    - s3_bucket
  template:
    data:
      aws_acm_certificate:
        acm_certificate:
          domain: var.acm_certificate_domain_name
    resource:
      aws_cloudfront_distribution:
        cloudfront_distribution:
          aliases: var.aliases
          comment: var.comment
          custom_error_response!:
            error_caching_min_ttl: 300
            error_code: 404
            response_code: 404
            response_page_path: /404.html
          default_root_object: index.html
          enabled: true
          is_ipv6_enabled: true
          http_version: http2
          price_class: PriceClass_All
          default_cache_behavior!:
            allowed_methods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            cached_methods:
              - GET
              - HEAD
              - OPTIONS
            compress: true
            max_ttl: 31536000
            default_ttl: 86400
            min_ttl: 0
            target_origin_id: >-
              format("%s-%s", "S3-Website",
              data.terraform_remote_state.s3_bucket.outputs.website_endpoint)
            viewer_protocol_policy: redirect-to-https
            forwarded_values!:
              headers: []
              query_string: false
              cookies!:
                forward: none
                whitelisted_names: []
          origin!:
            origin_id: >-
              format("%s-%s", "S3-Website",
              data.terraform_remote_state.s3_bucket.outputs.website_endpoint)
            domain_name: data.terraform_remote_state.s3_bucket.outputs.website_endpoint
            origin_path: ''
            custom_origin_config!:
              http_port: 80
              https_port: 443
              origin_protocol_policy: http-only
              origin_ssl_protocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
              origin_keepalive_timeout: 5
              origin_read_timeout: 30
          restrictions!:
            geo_restriction!:
              restriction_type: none
              locations: []
          viewer_certificate!:
            acm_certificate_arn: data.aws_acm_certificate.acm_certificate.arn
            ssl_support_method: sni-only
            minimum_protocol_version: TLSv1.1_2016
          tags:
            Description: Managed by TerraHub
            ThubCode: '${local.project["code"]}'
            ThubEnv: '${terraform.workspace}'
            ThubName: cloudfront_distribution
    dynamic:
      data:
        terraform_remote_state:
          - component: s3_bucket
            name: s3_bucket
    tfvars:
      aliases:
        - www-dev.terrahub.io
      comment: www-dev.terrahub.io
      acm_certificate_domain_name: terrahub.io
    output:
      id:
        value: aws_cloudfront_distribution.cloudfront_distribution.id
      arn:
        value: aws_cloudfront_distribution.cloudfront_distribution.arn
      status:
        value: aws_cloudfront_distribution.cloudfront_distribution.status
      domain_name:
        value: aws_cloudfront_distribution.cloudfront_distribution.domain_name
      etag:
        value: aws_cloudfront_distribution.cloudfront_distribution.etag
      hosted_zone_id:
        value: aws_cloudfront_distribution.cloudfront_distribution.hosted_zone_id
      last_modified_time:
        value: aws_cloudfront_distribution.cloudfront_distribution.last_modified_time
      in_progress_validation_batches:
        value: >-
          aws_cloudfront_distribution.cloudfront_distribution.in_progress_validation_batches
      caller_reference:
        value: aws_cloudfront_distribution.cloudfront_distribution.caller_reference

build:
  env:
    variables:
      THUB_S3_BUCKET_NAME: www-dev.terrahub.io
  phases:
    pre_build:
      commands:
        - echo 'BUILD: Running pre_build step'
      finally:
        - echo 'BUILD: pre_build step successful'
    build:
      commands:
        - echo 'BUILD: Running build step'
        - node ./scripts/invalidate.js
      finally:
        - echo 'BUILD: build step successful'
    post_build:
      commands:
        - echo 'BUILD: Running post_build step'
      finally:
        - echo 'BUILD: post_build step successful'
