## local config
component:
  name: 'cloudfront_distribution'
  dependsOn: ['../s3_bucket']
  template:
    terraform:
      backend:
        s3:
          key: 'terraform/mitocgroup/terrahub-www/cloudfront_distribution/terraform.tfstate'
    data:
      terraform_remote_state:
        s3_bucket:
          backend: 's3'
          config:
            bucket: 'data-lake-terrahub-us-east-1'
            key: '${var.remote_state_key}'
            region: 'us-east-1'
    resource:
      aws_cloudfront_distribution:
        cloudfront_distribution:
          aliases: '${var.aliases}'
          comment: '${var.comment}'
          ordered_cache_behavior: []
          custom_error_response:
            - error_caching_min_ttl: '300'
              error_code: '404'
              response_code: '404'
              response_page_path: '/404.html'
          default_root_object: 'index.html'
          enabled: 'true'
          is_ipv6_enabled: 'true'
          http_version: 'http2'
          price_class: 'PriceClass_All'
          default_cache_behavior:
            allowed_methods: ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT']
            cached_methods: ['GET', 'HEAD', 'OPTIONS']
            compress: 'true'
            max_ttl: '31536000'
            default_ttl: '86400'
            min_ttl: '0'
            target_origin_id: '${var.origin_id}'
            viewer_protocol_policy: 'redirect-to-https'
            forwarded_values:
              headers: []
              query_string: 'false'
              cookies:
                forward: 'none'
                whitelisted_names: []
          origin:
            origin_id: '${var.origin_id}'
            domain_name: '${var.origin_name}'
            origin_path: ''
            custom_origin_config:
              http_port: '80'
              https_port: '443'
              origin_protocol_policy: 'http-only'
              origin_ssl_protocols: ['TLSv1', 'TLSv1.1', 'TLSv1.2']
              origin_keepalive_timeout: '5'
              origin_read_timeout: '30'
          restrictions:
            geo_restriction:
              restriction_type: 'none'
              locations: []
          viewer_certificate:
            acm_certificate_arn: 'arn:aws:acm:${local.region}:${local.account_id}:certificate/${var.acm_certificate_id}'
            ssl_support_method: 'sni-only'
            minimum_protocol_version: 'TLSv1.1_2016'
          tags:
            Description: 'Managed by TerraHub'
            ThubCode: '${local.project["code"]}'
            ThubEnv: '${terraform.workspace}'
            ThubName: 'cloudfront_distribution'
      null_resource:
        invalidate_trigger:
          depends_on: ['data.terraform_remote_state.s3_bucket']
          triggers:
            source_code_hash: '${data.terraform_remote_state.s3_bucket.index_trigger}'
          provisioner:
            local-exec:
              command: 'node ${local.project["path"]}/.terrahub/cloudfront_distribution/scripts/invalidate.js'
              environment:
                ID: '${aws_cloudfront_distribution.cloudfront_distribution.id}'
    variable:
      remote_state_key:
        type: 'string'
      aliases:
        type: 'list'
      comment:
        type: 'string'
      origin_id:
        type: 'string'
      origin_name:
        type: 'string'
      acm_certificate_id:
        type: 'string'
    tfvars:
      remote_state_key: 'terraform/mitocgroup/terrahub-www/s3_bucket/terraform.tfstate'
      aliases: ['www-dev.terrahub.io']
      comment: 'www-dev.terrahub.io'
      origin_id: 'S3-Website-www-dev.terrahub.io.s3-website-us-east-1.amazonaws.com'
      origin_name: 'www-dev.terrahub.io.s3-website-us-east-1.amazonaws.com'
      acm_certificate_id: '053a94d1-0b55-4bbf-bb03-df79cfdaf22b'
    output:
      id:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.id}'
      arn:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.arn}'
      status:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.status}'
      domain_name:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.domain_name}'
      etag:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.etag}'
      hosted_zone_id:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.hosted_zone_id}'
      last_modified_time:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.last_modified_time}'
      in_progress_validation_batches:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.in_progress_validation_batches}'
      caller_reference:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.caller_reference}'
      active_trusted_signers:
        value: '${aws_cloudfront_distribution.cloudfront_distribution.active_trusted_signers}'
